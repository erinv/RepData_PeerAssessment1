library(kernlab)
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layoutl=c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
f[51]
y <- x+f-f*x+rnorm(100, sd = 0.5)
xyplot(y~x | f, layout=c (2,1))
xyplot(y ~ x | f, panel = function(x, y, ...) {    panel.xyplot(x, y, ...) ## First call default panel function panel.lmline(x, y, col = 2) ## Overlay a simple linear regression line})
xyplot(y ~ x | f, panel = function(x, y, ...) {    panel.xyplot(x, y, ...) ## First call default panel function panel.lmline(x, y, col = 2) ## Overlay a simple linear regression line})
xyplot(y ~ x | f, panel = function(x, y, ...) {    panel.xyplot(x, y, ...) ## First call default panel function })
xyplot(y ~ x | f, panel = function(x, y, ...) {    panel.xyplot(x, y, ...) panel.lmline(x, y, col = 2)})
})
panel.lmline(x, y, col = 2) ## Overlay a simple linear regression line
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...) ## First call default panel function
panel.lmline(x, y, col = 2) ## Overlay a simple linear regression line
})
source('~/datasciencecoursera/Reproducible Research/Assignment1/Assign_1.R')
replace(actdata$steps[is.na(actdata$steps)], actdata$interval==avgsteps$Group.1, avgsteps$x)
sum(is.na(actdata$steps))
actdata <- read.csv("activity.csv", header = TRUE,  na.strings = "NA")
actdata <- read.csv("activity.csv", header = TRUE,  na.strings = "NA")
actdata$date <- as.POSIXct(actdata$date)
sumsteps <- aggregate(actdata$steps, by=list(actdata$date), sum)
mean(sumsteps$x, na.rm=TRUE)
median(sumsteps$x, na.rm=TRUE)
avgsteps <- aggregate(newactdata$steps, by = list(newactdata$interval), mean)
avgsteps <- aggregate(actdata$steps, by = list(actdata$interval), mean)
View(avgsteps)
newactdata <- actdata[!is.na(actdata$steps),]
avgsteps <- aggregate(newactdata$steps, by = list(newactdata$interval), mean)
View(avgsteps)
filled <- if(is.na(actdata$steps), avgsteps$x[avgsteps$Group.1==actdata$interval], actdata$steps)
filled <- ifelse(is.na(actdata$steps), avgsteps$x[avgsteps$Group.1==actdata$interval], actdata$steps)
View(newactdata)
View(actdata)
View(actdata)
filled[667]
View(actdata)
View(actdata)
sum(is.na(actdata$steps))
sum(is.na(actdata$steps))
actdata$filled <- ifelse(is.na(actdata$steps),
avgsteps$x[avgsteps$Group.1==actdata$interval], actdata$steps)
head(actdata)
mean(sumsteps$x, na.rm=TRUE)
median(sumsteps$x, na.rm=TRUE)
newsumsteps <- aggregate(actdata$filled, by=list(actdata$date), sum)
View(newsumsteps)
mean(newsumsteps$x, na.rm=TRUE)
median(newsumsteps$x, na.rm=TRUE)
mean(sumsteps$x)
median(sumsteps$x)
View(sumsteps)
View(sumsteps)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",
"activity.zip", method = "curl")
unzip("activity.zip")
actdata <- read.csv("activity.csv", header = TRUE,  na.strings = "NA")
actdata$date <- as.POSIXct(actdata$date)
NAremoved <- actdata[!is.na(actdata$steps),]
sumsteps1 <- aggregate(NAremoved$steps, by=list(NAremoved$date), sum)
hist(sumsteps1$x, breaks = 10, col="blue", xlab="Steps per Day", main=NULL)
mean(sumsteps1$x)
median(sumsteps1$x)
avgsteps1 <- aggregate(NAremoved$steps, by = list(NAremoved$interval), mean)
plot(avgsteps1$Group.1, avgsteps1$x, type = "l", main = "Average Daily Activity
Pattern", xlab="Time Interval", ylab="Number of Steps")
avgsteps1$Group.1[avgstep1s$x==max(avgsteps1$x)]
avgsteps1$Group.1[avgsteps1$x==max(avgsteps1$x)]
View(avgsteps1)
sum(is.na(actdata$steps))
actdata$filled <- ifelse(is.na(actdata$steps),
avgsteps1$x[avgsteps1$Group.1==actdata$interval], actdata$steps)
View(actdata)
sumsteps2 <- aggregate(actdata$filled, by=list(actdata$date), sum)
mean(sumsteps2$x)
median(sumsteps2$x)
View(sumsteps2)
View(sumsteps2)
sum(is.na(actdata$filled))
View(actdata)
test <- actdata[is.na(actdata$filled),]
View(test)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",
"activity.zip", method = "curl")
unzip("activity.zip")
##Load the data
actdata <- read.csv("activity.csv", header = TRUE,  na.strings = "NA")
#Convert date field from factor to POSIXct format
actdata$date <- as.POSIXct(actdata$date)
hist(actdata$steps)
View(actdata)
View(actdata)
hist(actdata$steps, breaks=actdata$date)
actdata <- read.csv("activity.csv", header = TRUE,  na.strings = "NA")
hist(actdata$steps, breaks=actdata$date)
actdata$date <- as.POSIXct(actdata$date)
sumsteps1 <- aggregate(actdata$steps, by=list(actdata$date), sum)
View(sumsteps1)
hist(sumsteps1$x, breaks = 10, col="blue", xlab="Steps per Day", main=NULL)
mean(sumsteps1$x)
median(sumsteps1$x)
mean(sumsteps1$x, na.rm=TRUE)
median(sumsteps1$x, na.rm=TRUE)
Aremoved <- actdata[!is.na(actdata$steps),]
NAremoved <- actdata[!is.na(actdata$steps),]
avgsteps1 <- aggregate(NAremoved$steps, by = list(NAremoved$interval), mean)
avgsteps1 <- aggregate(actdata$steps, by = list(actdata$interval), mean)
View(avgsteps1)
avgsteps1 <- aggregate(NAremoved$steps, by = list(NAremoved$interval), mean)
table(actdata$interval)
dim(table(actdata$interval))
sum(is.na(avgsteps1$x))
plot(avgsteps1$Group.1, avgsteps1$x, type = "l", main = "Average Daily Activity
Pattern", xlab="Time Interval", ylab="Number of Steps")
avgsteps1$Group.1[avgsteps1$x==max(avgsteps1$x)]
sum(is.na(actdata$steps))
View(avgsteps1)
View(avgsteps1)
actdata$steps[is.na(actdata$steps)] <-
avgsteps1$x[avgsteps1$Group.1==actdata$interval]
actdata[10,]
actdata[1:10,]
sum(is.na(actdata$steps)
)
actdata <- read.csv("activity.csv", header = TRUE,  na.strings = "NA")
#Convert date field from factor to POSIXct format
actdata$date <- as.POSIXct(actdata$date)
actdata[1:10,]
filled <- merge(actdata, avgsteps1, by.x = "interval", by.y = "Group.1")
View(filled)
filled$newsteps <- filled$steps
filled$newsteps[is.na(filled$steps)] <- filled$x
ifelse(is.na(filled$steps), filled$newsteps=filled$x, filled$newsteps=filled$x)
ifelse(is.na(filled$steps), filled$newsteps <-filled$x, filled$newsteps <- filled$x)
View(filled)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",
"activity.zip", method = "curl")
unzip("activity.zip")
##Load the data
actdata <- read.csv("activity.csv", header = TRUE,  na.strings = "NA")
#Convert date field from factor to POSIXct format
actdata$date <- as.POSIXct(actdata$date)
#Strip out rows wtih NA values
NAremoved <- actdata[!is.na(actdata$steps),]
mean(sumsteps1$x, na.rm=TRUE)
median(sumsteps1$x, na.rm=TRUE)
sumsteps1 <- aggregate(actdata$steps, by=list(actdata$date), sum)
mean(sumsteps1$x, na.rm=TRUE)
median(sumsteps1$x, na.rm=TRUE)
avgsteps1 <- aggregate(NAremoved$steps, by = list(NAremoved$interval), mean)
sum(is.na(actdata$steps))
View(avgsteps1)
merge(actdata, avgsteps1, by.x = "interval", by.y="Group.1")
View(actdata)
View(actdata)
filled <- merge(actdata, avgsteps1, by.x = "interval", by.y="Group.1")
View(filled)
filled$modsteps <- ifelse(is.na(filled$steps), filled$x, filled$steps)
View(filled)
sumsteps2 <- aggregate(filled$modsteps, by=list(filled$date), sum)
mean(sumsteps2$x)
median(sumsteps2$x)
hist(sumsteps2$x, breaks = 10, col="blue", xlab="Steps per Day", main=NULL)
hist(sumsteps1$x, breaks = 10, col="blue", xlab="Steps per Day", main="Freq. Dist. of Steps
per Day - original data")
hist(sumsteps1$x, breaks = 10, col="blue", xlab="Steps per Day",
main="Distribution of Steps per Day - original data")
hist(sumsteps2$x, breaks = 10, col="blue", xlab="Steps per Day",
main="Distribution of Steps per Day - modified data")
str(filled$date)
filled$daytype <- weekdays(filled$date)
head(filled)
str(filled$daytype)
filled$day <- weekdays(filled$date)
head(filled)
filled$day[10,]
filled$day[10]
str(filled$day[10])
str(filled$date[10])
filled$daytype <- ifelse(filled$day=="Saturday" | filled$day == "Sunday", "Weekend", "Weekday")
head(filled)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
plot(avgsteps1$Group.1, avgsteps1$x, type = "l", main = "Average Daily Activity
Pattern", xlab="Time Interval", ylab="Number of Steps")
detach("package:ggplot2", unload=TRUE)
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:lattice", unload=TRUE)
wkdayavg <- aggregate(filled$newsteps[filled$daytype=="Weekday"],
by = list(filled$interval), mean)
View(filled)
wkdayavg <- aggregate(filled$modsteps[filled$daytype=="Weekday"],
by = list(filled$interval), mean)
wkdayavg <- aggregate(filled$modsteps[filled$daytype=="Weekday"],
by = list(filled$interval[filled$daytype="Weekday"]), mean)
wkdayavg <- aggregate(filled$modsteps[filled$daytype=="Weekday"],
by = list(filled$interval[filled$daytype=="Weekday"]), mean)
View(wkdayavg)
wkendavg <- aggregate(filled$modsteps[filled$daytype=="Weekend"],
by = list(filled$interval[filled$daytype=="Weekend"]), mean)
par(mfrow=c(2,1))
plot(wkdayavg$Group.1, wkdayavg$x, type = "l", main = "Average Daily Activity
Pattern - Weekdays", xlab="Time Interval", ylab="Number of Steps")
plot(wkendavg$Group.1, wkendavg$x, type = "l", main = "Average Daily Activity
Pattern - Weekdays", xlab="Time Interval", ylab="Number of Steps")
par(mfrow=c(2,1))
plot(wkdayavg$Group.1, wkdayavg$x, type = "l", main = "Average Daily Activity
Pattern - Weekdays", xlab="Time Interval", ylab="Number of Steps")
plot(wkendavg$Group.1, wkendavg$x, type = "l", main = "Average Daily Activity
Pattern - Weekends", xlab="Time Interval", ylab="Number of Steps")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",
"activity.zip", method = "curl")
unzip("activity.zip")
##Load the data
actdata <- read.csv("activity.csv", header = TRUE,  na.strings = "NA")
actdata$date <- as.POSIXct(actdata$date)
#Strip out rows wtih NA values
NAremoved <- actdata[!is.na(actdata$steps),]
#Calculate the number of steps taken each day and make a new summary data frame
sumsteps1 <- aggregate(actdata$steps, by=list(actdata$date), sum)
hist(sumsteps1$x, breaks = 10, col="blue", xlab="Steps per Day",
main="Distribution of Steps per Day - original data")
#Calculate and report mean and median values.
mean(sumsteps1$x, na.rm=TRUE)
median(sumsteps1$x, na.rm=TRUE)
avgsteps1 <- aggregate(NAremoved$steps, by = list(NAremoved$interval), mean)
plot(avgsteps1$Group.1, avgsteps1$x, type = "l", main = "Average Daily Activity
Pattern", xlab="Time Interval", ylab="Number of Steps")
avgsteps1$Group.1[avgsteps1$x==max(avgsteps1$x)]
sum(is.na(actdata$steps))
al
filled <- merge(actdata, avgsteps1, by.x = "interval", by.y="Group.1")
View(filled)
filled$modsteps <- ifelse(is.na(filled$steps), filled$x, filled$steps)
View(filled)
sumsteps2 <- aggregate(filled$modsteps, by=list(filled$date), sum)
hist(sumsteps2$x, breaks = 10, col="blue", xlab="Steps per Day",
main="Distribution of Steps per Day - modified data")
mean(sumsteps2$x)
median(sumsteps2$x)
filled$day <- weekdays(filled$date)
- ifelse(filled$day=="Saturday" | filled$day == "Sunday",
"Weekend", "Weekday")
View(filled)
filled$daytype <- ifelse(filled$day =="Saturday" | filled$day == "Sunday",
"Weekend", "Weekday")
View(filled)
wkdayavg <- aggregate(filled$modsteps[filled$daytype=="Weekday"],
by = list(filled$interval[filled$daytype=="Weekday"]), mean)
#Calculate average steps for weekends
wkendavg <- aggregate(filled$modsteps[filled$daytype=="Weekend"],
by = list(filled$interval[filled$daytype=="Weekend"]), mean)
par(mfrow=c(2,1))
plot(wkdayavg$Group.1, wkdayavg$x, type = "l", main = "Average Daily Activity
Pattern - Weekdays", xlab="Time Interval", ylab="Number of Steps")
plot(wkendavg$Group.1, wkendavg$x, type = "l", main = "Average Daily Activity
Pattern - Weekend", xlab="Time Interval", ylab="Number of Steps")
nrow(actdata)
View(actdata)
filled$day <- weekdays(filled$date)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
knit2html("PA1_template.Rmd", "PA1_template.html")
setwd("~/datasciencecoursera/Reproducible Research/Assignment1/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd", "PA1_template.html")
knit2html("PA1_template.Rmd", "PA1_template.html")
detach("package:knitr", unload=TRUE)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
